// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Module {
  id        Int      @id @default(autoincrement())
  name      String
  description  String
  instructions  String 
  price     Decimal @default(0)
  npm       String
  sourceCode  String?
  published   Boolean  @default(true)
  aproved   Boolean @default(true)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  comments     Comment[]  // Relation to comments
  faqs         FAQ[]      // Relation to FAQs
  installs     Install[]  // Relation to the Install model (User installs)
  images       Image[]    // Relation to images
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  username  String  @unique
  password  String
  modules Module[]
  comments Comment[] // Relation to comments
  installs Install[] // Relation to installs
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  Int
}

model FAQ {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  Int
}

model Install {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  Int
  createdAt DateTime @default(now())

  @@unique([userId, moduleId]) // Ensures a user can install a module only once
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String   // URL or path to the image file
  altText   String?  // Optional: description of the image for accessibility
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  Int
}